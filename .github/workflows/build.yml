name: Build

on:
  push:
    branches: ['package']
    tags:
      - "*"
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  LAST_RELEASED_VERSION: 11.1.11
  CURRENT_REPO_VERSION: 11.1.12

jobs:

  build:
    name: Docker image
    # runs-on: ${{ matrix.os }}
    # strategy:
    #   matrix:
    #     include:
    #       - os: ubuntu-latest
    #         arch: amd64
    #       - os: ubuntu-dfrnt-arm
    #         arch: arm64

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=ref,event=pr

      - name: Run Cog to update versions in files
        run: |
          pip install cogapp
          cog -v
          cog -r \
            -D LAST_RELEASED_VERSION=$LAST_RELEASED_VERSION \
            -D CURRENT_REPO_VERSION=$CURRENT_REPO_VERSION \
            docs/release-steps.md \
            src/config/terminus_config.pl \
            distribution/snap/snapcraft.yaml

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #cache-from: type=gha
          #cache-to: type=gha,mode=max
          build-args: TERMINUSDB_GIT_HASH=${{ github.sha }}
        platforms: |
          linux/arm64
          linux/amd64

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true